#vue-app {
  /* Makes the image board stretch over the entire page. */
  width: 100%;
  display: flex;
  flex-direction: column;
}

form {
  /* Some styling to make the form stand out. */
  background-color: rgba(100, 100, 100, 0.1);
  border: 1px solid rgba(50, 50, 50, 0.1);
  margin: 16px 32px;
  padding: 16px 16px;

  /* A layout to allow row/column inputs to be on the same line. */
  display: flex;
  flex-direction: column;
}

form > div {
  /* A layout to allow row/column inputs to be on the same line. */
  display: flex;
}

form label {
  flex: 1;
  margin: 16px 16px;
}

form label > input {
  margin-left: 8px;
}

form input:invalid {
  /* Highlight bad input. */
  background-color: rgb(255, 222, 222);
}

#image-url {
  display: flex;
}

#image-url input {
  flex: 1;
}

form button {
  /* The button shouldn't stretch, but be centered. */
  align-self: center;
}

.fill {
  /* Stretch an element across the "position: relative" ancestor. */
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.image-board {
  margin: 16px 16px;
  outline: 4px solid black;

  /* Make the board fill the page width. */
  flex: 1;

  /* Make the children stretch. */
  display: flex;
}

.image-container {
  /* Cover the entire parent. */
  flex: 1;

  /* Adapt to the width of the children, and allow us to stretch
   * them while maintaining aspect ratio. */
  display: inline-block;

  /* Allow a fit class to make the tiles cover the hidden image. */
  position: relative;
}

.image-container > img {
  /* A hidden image just to make the elements size correctly. */
  visibility: hidden;
  width: 100%;
}

.image-grid {
  /* Making this black allows us to use opacity on hover to darken a tile. */
  background-color: black;

  /* Lay out uniform rows. */
  display: flex;
  flex-direction: column;
}

.image-grid > * {
  /* The rows should fill up the container. */
  flex: 1;

  /* Lay out uniform columns. */
  display: flex;
}

.image-tile:hover {
  /* Highlight tiles on hover. */
  opacity: 0.8;
  outline: 4px solid rgb(100, 100, 255);
  z-index: 20;
}

.image-tile.selected {
  outline: 4px solid rgb(100, 255, 100);
  z-index: 10;
}

.solved-overlay {
  /* Hide the image a bit, to make text easier to read. */
  background-color: rgba(200, 200, 255, 0.95);

  /* Center everything in the overlay. */
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  z-index: 30;
}
